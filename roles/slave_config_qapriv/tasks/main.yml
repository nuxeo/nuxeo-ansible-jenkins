---
- name: Get AWS ID
  debug: msg="{{lookup('env','AWS_ACCESS_KEY_ID')}}"
  no_log: true
  register: aws_id
- name: Get AWS secret
  debug: msg="{{lookup('env','AWS_SECRET_ACCESS_KEY')}}"
  no_log: true
  register: aws_secret
- name: Stop if credentials are missing
  fail: msg="You must have AWS_ACCESS_KEY_ID and AWS_SECRET_ACCESS_KEY in your environment"
  when: aws_id.msg == "" or aws_secret.msg == ""

- name: Install Firefox 24
  stat: path=/opt/build/tools/firefox-24
  register: ff24_installed
- s3: bucket={{s3_bucket}} region={{s3_region}}
      object=/{{s3_tools_path}}/firefox-24.0.tar.bz2 dest=/tmp/firefox-24.0.tar.bz2 mode=get
      aws_access_key={{aws_id.msg}} aws_secret_key={{aws_secret.msg}}
  when: not ff24_installed.stat.exists
- unarchive: src=/tmp/firefox-24.0.tar.bz2 dest=/opt/build/tools copy=no
  when: not ff24_installed.stat.exists

- command: creates=/opt/build/tools/firefox-24
           mv /opt/build/tools/firefox /opt/build/tools/firefox-24
  when: not ff24_installed.stat.exists
- file: path=/tmp/firefox-24.0.tar.bz2 state=absent

- name: Install Firefox 42
  stat: path=/opt/build/tools/firefox-42
  register: ff42_installed
- s3: bucket={{s3_bucket}} region={{s3_region}}
      object=/{{s3_tools_path}}/firefox-42.0.tar.bz2 dest=/tmp/firefox-42.0.tar.bz2 mode=get
      aws_access_key={{aws_id.msg}} aws_secret_key={{aws_secret.msg}}
  when: not ff42_installed.stat.exists
- unarchive: src=/tmp/firefox-42.0.tar.bz2 dest=/opt/build/tools copy=no
  when: not ff42_installed.stat.exists
- command: creates=/opt/build/tools/firefox-42
           mv /opt/build/tools/firefox /opt/build/tools/firefox-42
  when: not ff42_installed.stat.exists
- file: path=/tmp/firefox-42.0.tar.bz2 state=absent

- name: Set Firefox 42 as default
  alternatives: name=firefox link=/usr/bin/firefox path=/opt/build/tools/firefox-42/firefox

- name: Get jenkins base home from S3
  command: aws s3 sync s3://{{s3_bucket}}/{{s3_config_path}}/jenkins_home/ /opt/jenkins --region={{s3_region}}
  environment:
    AWS_ACCESS_KEY_ID: "{{aws_id.msg}}"
    AWS_SECRET_ACCESS_KEY: "{{aws_secret.msg}}"
  register: homesyncpriv
  changed_when: homesyncpriv.stdout != ""
- file: path=/opt/jenkins/.docker state=directory owner=jenkins group=jenkins mode=0700
- file: path=/opt/jenkins/.docker/config.json state=file owner=jenkins group=jenkins mode=0600
