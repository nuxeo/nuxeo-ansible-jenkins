---
# file: slave.yml
- hosts: all
  gather_facts: no
  user: ubuntu
  sudo: yes
  tasks:
  - name: Configure user 'ubuntu'
    authorized_key: user=ubuntu key="{{item}}"
    with_file:
    - templates/Jenkins_aws_system.pem.pub
  - authorized_key: user=ubuntu key="{{item}}"
    with_fileglob:
    - /opt/build/hudson/authorized_keys/id_*.pub

  - name: Configure user 'jenkins'
    file: path=/opt/jenkins state=directory
  - user: name=jenkins home=/opt/jenkins state=present shell=/bin/bash
  - file: path=~jenkins/ state=directory owner=jenkins group=jenkins
  - file: path=~jenkins/.ssh state=directory owner=jenkins group=jenkins mode=700
  - authorized_key: user=jenkins key="{{ item }}"
    with_file:
    - templates/jenkins_id_rsa.pub
    - templates/Jenkins_aws_system.pem.pub
  - authorized_key: user=jenkins key="{{ item }}"
    with_fileglob:
    - /opt/build/hudson/authorized_keys/id_*.pub
  - copy: src=templates/91-cloudimg-jenkins dest=/etc/sudoers.d/91-cloudimg-jenkins
          mode=440 owner=root group=root
  - copy: src=~/.ssh/jenkins_id_rsa dest=~jenkins/.ssh/id_rsa
          owner=jenkins group=jenkins mode=600 backup=no
  - copy: src=templates/jenkins_id_rsa.pub dest=~jenkins/.ssh/id_rsa.pub
          owner=jenkins group=jenkins mode=600 backup=no
  - copy: src=templates/jenkins_ssh_config dest=~jenkins/.ssh/config
          owner=jenkins group=jenkins mode=600 backup=no
  - file: path=~jenkins/.m2 state=directory owner=jenkins group=jenkins
  - copy: src=/opt/build/hudson/m2remote/settings.xml dest=~jenkins/.m2/settings.xml
          owner=jenkins group=jenkins
  - copy: src=templates/.profile dest=~jenkins/.profile
          owner=jenkins group=jenkins backup=no
  - copy: src=templates/.bashrc dest=~jenkins/.bashrc
          owner=jenkins group=jenkins backup=no

  - name: Upgrade/install current packages
    shell: apt-get update && apt-get -q -y upgrade
  - name: Check whether this is ubuntu or debian
    shell: lsb_release -is
    register: vendor
  - name: Upgrade/install iceweasel on Debian
    apt: pkg=iceweasel state=latest
    when: vendor.stdout == "Debian"
  - name: Upgrade/install dependencies
    apt: state=latest pkg=$item
    with_items:
    - openjdk-6-jdk
    - openjdk-7-jdk
    - git
    - mercurial
    - subversion
    - chromium-browser
    - ant
    - ant-contrib
    - imagemagick
    # conflicts with custom build with x264 support
    # - ffmpeg
    - ffmpeg2theora
    - lynx
    - sysstat
    - logtail
    - gawk
    - vim
    - wget
    - curl
    - unzip
    - moreutils
    - ufraw
    - poppler-utils
    - libreoffice
    - libwpd-tools
    - xvfb
    - x11vnc
    - fluxbox
    - linkchecker
    # Amazon S3
    - s3cmd
    # Funkload requirements
    - python-dev
    - python-setuptools
    - python-webunit
    - python-docutils
    - gnuplot
    - python-reportlab
    - python-pypdf
  - apt: state=latest pkg=tcpwatch-httpproxy install_recommends=no
  - shell: easy_install -U pip
  - shell: easy_install -f http://funkload.nuxeo.org/snapshots/ -U funkload
  - shell: update-alternatives --set editor /usr/bin/vim.basic
  - file: src=/usr/lib/jvm/java-1.7.0-openjdk-amd64 path=/usr/lib/jvm/java-7-openjdk state=link
  # Xvfb, x11vnc, fluxbox
  - copy: src=templates/xvfb dest=/etc/init.d/xvfb
          mode=755 owner=root group=root
  - shell: update-rc.d xvfb defaults
  # FFmpeg build with x264, vpx and AAC support if needed
  - copy: src=templates/ffmpeg-compile.sh dest=/tmp/ffmpeg-compile.sh
          mode=755 owner=root group=root
  - shell: /tmp/ffmpeg-compile.sh
  - file: path=/tmp/ffmpeg-nuxeo state=absent

  - name: Tooling
    file: path=/opt/build state=directory owner=root group=root

  - file: path=/opt/build/hudson state=directory owner=jenkins group=jenkins
  - copy: src=/opt/build/hudson/gradle.properties dest=/opt/build/hudson/gradle.properties
          owner=jenkins group=jenkins
  - file: path=/opt/build/tools state=directory owner=jenkins group=jenkins
  - copy: src=templates/use_mnt.sh dest=~jenkins/use_mnt.sh
          mode=755 owner=jenkins group=jenkins

  # Firefox
  - name: Check if Firefox 22 is installed
    shell: "[ -d /opt/build/tools/firefox-22 ] && echo 'Found' || echo ''"
    register: ff22_installed
  # Can't use APT which pulls FF 23
  # - name: Upgrade/install firefox on Ubuntu
  #   apt: pkg=firefox state=latest
  - include: tasks/firefox.yml
    when: vendor.stdout == "Ubuntu" and not ff22_installed.stdout

  - name: Git config
    # should be backup=yes but create=true option is missing on ini_file
    ini_file: dest=~jenkins/.gitconfig state=present backup=no owner=jenkins group=jenkins mode=640
              section=user option=name value="Jenkins Nuxeo"
  - ini_file: dest=~jenkins/.gitconfig state=present backup=no owner=jenkins group=jenkins mode=640
              section=user option=email value="jenkins@nuxeo.com"

  - name: Maven 2.x
    uri: creates=/opt/build/tools/maven2
         url=http://www.us.apache.org/dist/maven/maven-2/2.2.1/binaries/apache-maven-2.2.1-bin.tar.gz
         dest=/tmp/apache-maven-2.2.1-bin.tar.gz
  - command: creates=/opt/build/tools/maven2 chdir=/opt/build/tools
             tar zxvf /tmp/apache-maven-2.2.1-bin.tar.gz
  - file: src=/opt/build/tools/apache-maven-2.2.1 path=/opt/build/tools/maven2 state=link
  - shell: update-alternatives --install /usr/bin/mvn mvn /opt/build/tools/maven2/bin/mvn 1
  - file: path=/tmp/apache-maven-2.2.1-bin.tar.gz state=absent

  - name: Maven 3.x
    uri: creates=/opt/build/tools/maven3
         url=http://www.us.apache.org/dist/maven/maven-3/3.0.5/binaries/apache-maven-3.0.5-bin.tar.gz
         dest=/tmp/apache-maven-3.0.5-bin.tar.gz
  - command: creates=/opt/build/tools/maven3 chdir=/opt/build/tools
             tar zxvf /tmp/apache-maven-3.0.5-bin.tar.gz
  - file: src=/opt/build/tools/apache-maven-3.0.5 path=/opt/build/tools/maven3 state=link
  - shell: update-alternatives --install /usr/bin/mvn mvn /opt/build/tools/maven3/bin/mvn 2
  - file: path=/tmp/apache-maven-3.0.5-bin.tar.gz state=absent

  - name: Gradle 1.x
    uri: creates=/opt/build/tools/gradle
         url=http://services.gradle.org/distributions/gradle-1.6-bin.zip
         dest=/tmp/gradle-1.6-bin.zip
  - command: creates=/opt/build/tools/gradle
             unzip /tmp/gradle-1.6-bin.zip -d /opt/build/tools/
  - file: src=/opt/build/tools/gradle-1.6 path=/opt/build/tools/gradle state=link
  - shell: update-alternatives --install /usr/bin/gradle gradle /opt/build/tools/gradle/bin/gradle 1
  - file: path=/tmp/gradle-1.6-bin.zip state=absent

  - name: Spot instance Jenkins callback script
  # use https://qa.nuxeo.org/jenkins/plugin/ec2/AMI-Scripts/ubuntu-ami-setup.sh once ec2 plugin upgraded
    get_url: url=https://github.com/jenkinsci/ec2-plugin/raw/master/src/main/webapp/AMI-Scripts/ubuntu-init.py 
             dest=/usr/bin/userdata mode=0750
  - lineinfile: dest=/etc/rc.local backup=true state=present
                regexp='^python /usr/bin/userdata$' line='python /usr/bin/userdata' insertbefore='^exit 0'
    #notify: reload rc.local
  - lineinfile: dest=/etc/hosts create=true backup=true state=present
                regexp='176.57.246.10' line='176.57.246.10 thorin thorin.in.nuxeo.com qa qa.nuxeo.org qapriv qapriv.nuxeo.org'
  - lineinfile: dest=/etc/hosts create=true backup=true state=present
                regexp='176.57.246.12' line='176.57.246.12 maven.in.nuxeo.com'

- hosts: all
  gather_facts: no
  user: jenkins
  sudo: no
  tasks:
  - local_action: shell rsync -az --delete /opt/build/keystores
                 -e 'ssh -o stricthostkeychecking=no
                         -o userknownhostsfile=/dev/null
                         -o batchmode=yes
                         -o passwordauthentication=no'
                 jenkins@${inventory_hostname}:/opt/build/keystores
